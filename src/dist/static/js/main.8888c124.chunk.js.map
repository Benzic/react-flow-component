{"version":3,"sources":["lib/drawCanvas/index.ts","lib/actions/index.ts","lib/multiple/index.tsx","index.js"],"names":["drawText","rectCfg","ctx","x","y","title","active","fillStyle","font","fontSize","txtWidth","measureText","width","fillText","xText","yText","drawRoundedRect","corner","bgImg","r","halfWidth","halfHeight","height","console","log","save","beginPath","moveTo","lineTo","arcTo","BgColor","activeBgColor","fill","closePath","restore","pic","Image","src","onload","drawImage","dragSelect","sx","sy","setLineDash","lineWidth","strokeStyle","stroke","dragTriangle","lineCfg","xDeviation","yDeviation","Math","sqrt","pow","color","activeColor","drawLine","action","activeMoveRect","activeDeleRect","activeLine","key","toKey","singleClick","lastClickTime","mouseDownXY","selectArea","startX","startY","endX","endY","nodes","canvas","onChange","checkKeyDown","event","keyCode","deleLine","deleRect","initCanvas","getRectIndex","index","i","length","clearRect","j","to","ENode","SNode","node","rectIndex","filter","a","splice","findRectInCanvas","rect","realLen","maxLen","point","findLineInCanvas","line","endIndex","halfY","firstLine","lastLine","centerLine","firstCircle","MultipleFlow","selectedKeys","rectConfig","mode","lineCofig","onEdit","useRef","wrapper","useEffect","window","addEventListener","edit","onMouseMove","useCallback","ax","offsetX","ay","offsetY","floor","xCorrecting","yCorrecting","onDragRect","current","onmousemove","onmouseup","activeMoveRectPoint","onMouseDown","Date","valueOf","push","offsetWidth","offsetHeight","getContext","onmousedown","ref","style","id","treeData","children","type","App","useState","setSelectedKeys","zIndex","setZindex","currentKey","setCurrentKey","showKeys","setShowKeys","dragBox","ondragstart","evt","clientX","target","offsetLeft","clientY","offsetTop","dataset","ondragover","preventDefault","ondragenter","ondrop","offset_x","offset_y","JSON","stringify","includes","display","position","left","top","map","item","className","draggable","onClick","indexOf","data-title","data-key","itx","marginLeft","background","render","document","getElementById"],"mappings":"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","file":"static/js/main.8888c124.chunk.js","sourcesContent":["/*\r\n * @Author: your name\r\n * @Date: 2020-08-06 15:21:59\r\n * @LastEditTime: 2020-08-07 10:24:49\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\my-app\\src\\components\\flowCom\\drawCanvas.ts\r\n */\r\n// import { textProps, selectProps, rectProps, triangleProps, lineProps } from './drawCanvasInterface'\r\nexport function drawText<textProps>(rectCfg: any, ctx: any, x: any, y: any, title?: any, active?: any) {\r\n    ctx.fillStyle = \"black\";\r\n    ctx.font = rectCfg?.fontSize ? rectCfg?.fontSize + ' Arial' : '12px Arial'\r\n    active && (ctx.fillStyle = \"white\");\r\n    const txtWidth = ctx.measureText(title).width\r\n    ctx.fillText(title, x - (rectCfg?.xText ?? txtWidth / 2), y + (rectCfg?.yText ?? 5));\r\n}\r\n\r\nexport function drawRoundedRect(rectCfg: any, ctx: any, x: any, y: any, corner: any, title?: any, active?: any, bgImg?: string) {\r\n    const r = corner ? corner : rectCfg?.corner ?? 0\r\n    const halfWidth = (rectCfg?.width / 2) || 50\r\n    const halfHeight = (rectCfg?.height / 2) || 15\r\n    console.log(halfWidth, halfHeight)\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.moveTo(x - halfWidth + r, y - halfHeight);\r\n    ctx.lineTo(x + halfWidth - r, y - halfHeight);\r\n    ctx.arcTo(x + halfWidth, y - halfHeight, x + halfWidth, y + r, r);\r\n    ctx.lineTo(x + halfWidth, y + halfHeight - r);\r\n    ctx.arcTo(x + halfWidth, y + halfHeight, x + halfWidth - r, y + halfHeight, r);\r\n    ctx.lineTo(x - halfWidth + r, y + halfHeight);\r\n    ctx.arcTo(x - halfWidth, y + halfHeight, x - halfWidth, y + halfHeight - r, r);\r\n    ctx.lineTo(x - halfWidth, y - halfHeight + r);\r\n    ctx.arcTo(x - halfWidth, y - halfHeight, x - halfWidth + r, y - halfHeight, r);\r\n    ctx.fillStyle = rectCfg?.BgColor ?? \"white\";\r\n    active && (ctx.fillStyle = rectCfg?.activeBgColor ?? \"#40a9ff\");\r\n    ctx.fill()\r\n    ctx.closePath();\r\n    ctx.restore();\r\n    if (bgImg) {\r\n        drawImage(ctx, bgImg, rectCfg, x, y, title, active)\r\n    } else {\r\n        title && drawText(rectCfg, ctx, x, y, title, active)\r\n    }\r\n}\r\nexport function drawImage(ctx: any, bgImg: any, rectCfg: any, x: any, y: any, title: any, active: any) {\r\n    const halfWidth = (rectCfg?.width / 2) || 50\r\n    const halfHeight = (rectCfg?.height / 2) || 15\r\n    var pic: any = new Image();\r\n    pic.src = bgImg;\r\n    pic.onload = function () {\r\n        ctx.drawImage(pic, x - halfWidth, y - halfHeight, rectCfg?.width ?? 50, rectCfg?.height ?? 30)\r\n        title && drawText(rectCfg, ctx, x, y, title, active)\r\n    };\r\n}\r\nexport function dragSelect(ctx: any, sx: any, sy: any, x: any, y: any) {\r\n    ctx.save()\r\n    ctx.beginPath();\r\n    ctx.setLineDash([8, 8]);\r\n    ctx.moveTo(sx, sy);\r\n    ctx.lineTo(x, sy);\r\n    ctx.lineTo(x, y);\r\n    ctx.lineTo(sx, y);\r\n    ctx.lineTo(sx, sy);\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = \"#999\";\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.restore()\r\n}\r\n\r\nexport function dragTriangle(lineCfg: any, rectCfg: any, ctx: any, sy: any, x: any, y: any, active?: any) {\r\n    const halfHeight = (rectCfg?.height / 2) || 15\r\n    const xDeviation = (lineCfg?.width ?? 2) * 2.5\r\n    const yDeviation = Math.sqrt(Math.pow(2 * xDeviation, 2) - Math.pow(xDeviation, 2))\r\n    ctx.save()\r\n    ctx.beginPath();\r\n    ctx.fillStyle = lineCfg?.color ?? \"#40a9ff\";\r\n    active && (ctx.fillStyle = lineCfg?.activeColor ?? \"orange\")\r\n    ctx.moveTo(x, y - (sy - y > 0 ? -halfHeight : halfHeight));\r\n    ctx.lineTo(x - xDeviation, y - (sy - y > 0 ? -halfHeight - yDeviation : halfHeight + yDeviation));\r\n    ctx.lineTo(x + xDeviation, y - (sy - y > 0 ? -halfHeight - yDeviation : halfHeight + yDeviation));\r\n    ctx.lineTo(x, y - (sy - y > 0 ? -halfHeight : halfHeight));\r\n    ctx.lineWidth = lineCfg?.width ?? 2;\r\n    ctx.closePath();\r\n    ctx.fill()\r\n    ctx.restore()\r\n}\r\n\r\nexport function drawLine(lineCfg: any, rectCfg: any, ctx: any, sx: any, sy: any, x: any, y: any, active?: any) {\r\n    const halfHeight = (rectCfg?.height / 2) || 15\r\n    ctx.save()\r\n    ctx.beginPath();\r\n    ctx.moveTo(sx, sy);\r\n    if ((sy > y && sy > y + halfHeight) || (sy < y && sy < y - halfHeight) || !halfHeight) {\r\n        ctx.lineTo(sx, (sy + (y - sy) / 2));\r\n        ctx.lineTo(x, (sy + (y - sy) / 2));\r\n    } else {\r\n        ctx.lineTo(sx, sy + (sy > y ? rectCfg + 25 : -rectCfg - 25));\r\n        ctx.lineTo(x, sy + (sy > y ? rectCfg + 25 : -rectCfg - 25));\r\n    }\r\n    ctx.lineTo(x, y);\r\n    ctx.lineWidth = lineCfg?.width ?? 2;\r\n    ctx.strokeStyle = lineCfg?.color ?? \"#40a9ff\";\r\n    active && (ctx.strokeStyle = lineCfg?.activeColor ?? \"orange\")\r\n    ctx.stroke();\r\n    ctx.restore()\r\n}","/*\r\n * @Author: your name\r\n * @Date: 2020-08-06 15:21:59\r\n * @LastEditTime: 2020-08-07 14:47:01\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\my-app\\src\\components\\flowCom\\drawCanvas.ts\r\n */\r\nimport { dragTriangle, drawLine, drawRoundedRect } from '../drawCanvas'\r\n\r\nconst action: any = {\r\n    activeMoveRect: null,\r\n    activeDeleRect: null,\r\n    activeLine: { key: null, toKey: null },\r\n    singleClick: true,\r\n    lastClickTime: null,\r\n    mouseDownXY: { x: 0, y: 0 },\r\n    selectArea: { startX: 0, startY: 0, endX: 0, endY: 0 },\r\n    nodes: [],\r\n    canvas: null,\r\n    rectCfg: null,\r\n    lineCfg: null,\r\n    ctx: null,\r\n    onChange: null,\r\n    checkKeyDown: (event: any) => {\r\n        if (event.keyCode === 46) {\r\n            if (action.activeLine.key !== null) {\r\n                action.deleLine()\r\n            }\r\n            if (action.activeDeleRect !== null) {\r\n                action.deleRect()\r\n            }\r\n            action.initCanvas()\r\n        }\r\n    },\r\n    getRectIndex: (key: any) => {\r\n        let index = 0\r\n        let nodes = action.nodes\r\n        for (let i = 0; i <= nodes.length - 1; i++) {\r\n            if (nodes[i].key === key) {\r\n                index = i\r\n            }\r\n        }\r\n        return index\r\n    },\r\n    initCanvas: () => {\r\n        console.log(action.nodes)\r\n        let nodes = action.nodes\r\n        action.ctx.clearRect(0, 0, action.canvas?.width, action.canvas?.height)\r\n        for (let i = 0; i <= nodes.length - 1; i++) {\r\n            for (let j = 0; j <= nodes[i].to.length - 1; j++) {\r\n                let rectIndex = action.getRectIndex(nodes[i].to[j])\r\n                const ENode = nodes[rectIndex]\r\n                if (ENode) {\r\n                    const SNode = nodes[i]\r\n                    drawLine(action.lineCfg, action.rectCfg, action.ctx, SNode.x, SNode.y, ENode.x, ENode.y, action.activeLine.key === SNode.key && action.activeLine.toKey === SNode.to[j])\r\n                    dragTriangle(action.lineCfg, action.rectCfg, action.ctx, SNode.y, ENode.x, ENode.y, action.activeLine.key === SNode.key && action.activeLine.toKey === SNode.to[j])\r\n                }\r\n            }\r\n        }\r\n        console.log('1')\r\n        for (let i = 0; i <= nodes.length - 1; i++) {\r\n            const node = nodes[i]\r\n            drawRoundedRect(action.rectCfg, action.ctx, node.x, node.y, node.corner, node.title, action.activeMoveRect === node.key, node.bgImg ?? action.rectCfg?.bgImg)\r\n        }\r\n    },\r\n    deleLine: () => {\r\n        let nodes = action.nodes\r\n        let rectIndex = action.getRectIndex(action.activeLine.key)\r\n        if (nodes[rectIndex]) {\r\n            nodes[rectIndex].to = nodes[rectIndex].to.filter((a: any) => a !== action.activeLine.toKey)\r\n            action.onChange && action.onChange(nodes)\r\n            action.activeLine = { key: null, toKey: null }\r\n        }\r\n    },\r\n    deleRect: () => {\r\n        let nodes = action.nodes\r\n        for (let i = 0; i <= nodes.length - 1; i++) {\r\n            for (let j = 0; j <= nodes[i].to.length - 1; j++) {\r\n                if (nodes[i].to[j] === action.activeDeleRect) {\r\n                    nodes[i].to = nodes[i].to.splice(action.getRectIndex(action.activeDeleRect), 1)\r\n                }\r\n            }\r\n        }\r\n        let rectIndex = action.getRectIndex(action.activeDeleRect)\r\n        nodes.splice(rectIndex, 1)\r\n        action.onChange && action.onChange(nodes)\r\n        action.activeDeleRect = null\r\n    },\r\n    findRectInCanvas: (x: any, y: any) => {\r\n        let rect = null\r\n        let nodes = action.nodes\r\n        const halfWidth = (action.rectCfg?.width / 2) || 50\r\n        const halfHeight = (action.rectCfg?.height / 2) || 15\r\n        for (let i = 0; i <= nodes.length - 1; i++) {\r\n            const r = nodes[i].corner ? nodes[i].corner : action.rectCfg?.corner ?? 0\r\n            const realLen = Math.sqrt(Math.pow(nodes[i].x - x, 2) + Math.pow(nodes[i].y - y, 2))\r\n            const maxLen = Math.sqrt(Math.pow(halfWidth - r, 2) + Math.pow(halfHeight - r, 2)) + r\r\n            if ((x < nodes[i].x + halfWidth && x > nodes[i].x - halfWidth) && (y < nodes[i].y + halfHeight && y > nodes[i].y - halfHeight)) {\r\n                if (realLen < maxLen) {\r\n                    if (nodes[i].key !== action.activeMoveRect) {\r\n                        rect = { point: nodes[i], key: nodes[i].key }\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return rect\r\n    },\r\n    findLineInCanvas: () => {\r\n        let line = {};\r\n        let nodes = action.nodes\r\n        for (let i = 0; i <= nodes.length - 1; i++) {\r\n            for (let j = 0; j <= nodes[i].to.length - 1; j++) {\r\n                let startX = nodes[i].x, startY = nodes[i].y;                                   //起点位置的X轴、Y轴\r\n                let endIndex = action.getRectIndex(nodes[i].to[j])\r\n                let endX = nodes[endIndex].x, endY = nodes[endIndex].y;           //终点位置的X轴、Y轴\r\n                let halfY, firstLine, lastLine, centerLine, firstCircle;     //halfY是指两个区域间中间一半的位置，firstLine是指出发后得第一条线，centerLine是中间线段，lastLine是出发后最后一条线,firstCircle是指出发后第一个转折点\r\n                if (startY < endY) {                       //如果线条从上往下画\r\n                    halfY = startY + (endY - startY) / 2\r\n                    firstCircle = (startX < action.selectArea.endX && startX > action.selectArea.startX) && (halfY < action.selectArea.endY && halfY > action.selectArea.startY)\r\n                    firstLine = (startX < action.selectArea.endX && startX > action.selectArea.startX) && (action.selectArea.startY > startY && action.selectArea.startY < halfY)\r\n                    lastLine = (action.selectArea.startX < endX && action.selectArea.endX > endX) && (action.selectArea.endY > halfY && action.selectArea.endY < endY)\r\n                } else {                                        //如果线条从下往上画\r\n                    halfY = endY + (startY - endY) / 2\r\n                    firstCircle = (startX < action.selectArea.endX && startX > action.selectArea.startX) && (halfY < action.selectArea.endY && halfY > action.selectArea.startY)\r\n                    firstLine = (action.selectArea.endX > startX && action.selectArea.startX < startX) && (action.selectArea.startY > halfY && action.selectArea.startY < startY)\r\n                    lastLine = (action.selectArea.startX < endX && action.selectArea.endX > endX) && (action.selectArea.endY < halfY && action.selectArea.endY > endY)\r\n                }\r\n                if (startX > endX) {                       //中间的只处理X方向的大小关系\r\n                    centerLine = (action.selectArea.endX > endX && action.selectArea.endX < startX) && (action.selectArea.endY > halfY && action.selectArea.startY < halfY)\r\n                } else {\r\n                    centerLine = (action.selectArea.endX > startX && action.selectArea.endX < endX) && (action.selectArea.endY > halfY && action.selectArea.startY < halfY)\r\n                }\r\n                if (firstLine || centerLine || lastLine || firstCircle) {      //有一个条件满足即视为在选中区域\r\n                    line = { key: nodes[i].key, toKey: nodes[i].to[j] }\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        action.activeLine = line\r\n        action.initCanvas(action.rectCfg, action.lineCfg, action.ctx, action.canvas, nodes)\r\n    }\r\n}\r\nexport default action\r\n","import React, { useEffect, useCallback, useRef } from 'react'\r\nimport { FlowProps } from '../interface'\r\nimport { dragSelect, drawLine } from '../drawCanvas'\r\nimport action from '../actions'\r\nconst MultipleFlow: React.FC<FlowProps> = ({ selectedKeys = [], mode, rectConfig, lineCofig, onChange, onEdit }) => {\r\n    const canvas: any = useRef(null)\r\n    const wrapper: any = useRef(null)\r\n    useEffect(() => {\r\n        action.rectCfg = rectConfig\r\n        action.lineCfg = lineCofig\r\n        action.onChange = onChange\r\n        window.addEventListener('keydown', action.checkKeyDown, true);\r\n        console.log(rectConfig,\"-\")\r\n        if (rectConfig?.edit) {\r\n            window.addEventListener('dblclick', () => {\r\n                let rectIndex = action.getRectIndex(action.activeMoveRect)\r\n                let node = {\r\n                    node: action.nodes[rectIndex],\r\n                    index: rectIndex\r\n                }\r\n                onEdit && onEdit(node)\r\n            }, true);\r\n        }\r\n    }, [rectConfig, lineCofig, onChange, onEdit])\r\n    useEffect(() => {\r\n        console.log(selectedKeys)\r\n        action.nodes = selectedKeys\r\n        action.ctx &&  action.initCanvas()\r\n    }, [selectedKeys])\r\n    const onMouseMove = useCallback((event: any) => {\r\n        let ax = event.offsetX, ay = event.offsetY;\r\n        if (action.activeMoveRect !== null) {\r\n            let rectIndex = action.getRectIndex(action.activeMoveRect)\r\n            if (action.singleClick) {\r\n                if (action.nodes[rectIndex].active) {\r\n                    action.nodes[rectIndex].x = Math.floor(ax / (action.rectCfg?.xCorrecting ?? 10)) * (action.rectCfg?.xCorrecting ?? 10)\r\n                    action.nodes[rectIndex].y = Math.floor(ay / (action.rectCfg?.yCorrecting ?? 5)) * (action.rectCfg?.yCorrecting ?? 5)\r\n                }\r\n                action.initCanvas()\r\n            } else {\r\n                action.initCanvas()\r\n                drawLine(action.lineCfg, action.rectCfg, action.ctx, action.nodes[rectIndex].x, action.nodes[rectIndex].y, ax, ay)\r\n            }\r\n        } else {\r\n            action.activeDeleRect = null\r\n            action.initCanvas()\r\n            action.startX = action.mouseDownXY.x;\r\n            action.selectArea.startY = action.mouseDownXY.y;\r\n            action.selectArea.endX = ax;\r\n            action.selectArea.endY = ay;\r\n            dragSelect(action.ctx, action.mouseDownXY.x, action.mouseDownXY.y, ax, ay)\r\n        }\r\n    }, [])\r\n    const onDragRect = useCallback(() => {\r\n        canvas.current.onmousemove = onMouseMove\r\n        canvas.current.onmouseup = function (event: any) {\r\n            let ax = event.offsetX, ay = event.offsetY;\r\n            if (action.activeMoveRect !== null && !action.singleClick) {\r\n                let activeMoveRectPoint = action.findRectInCanvas(ax, ay)\r\n                let rectIndex = action.getRectIndex(action.activeMoveRect)\r\n                if (activeMoveRectPoint) {\r\n                    action.nodes[rectIndex].to = [...action.nodes[rectIndex].to, activeMoveRectPoint.key]\r\n                    action.nodes[rectIndex].active = false\r\n                    onChange && onChange(action.nodes)\r\n                }\r\n                action.initCanvas()\r\n            } else {\r\n                if (action.activeMoveRect === null) {\r\n                    action.findLineInCanvas()\r\n                }\r\n            }\r\n            action.activeMoveRect = null\r\n            canvas.current.onmousemove = null;\r\n            canvas.current.onmouseup = null;\r\n        };\r\n    }, [onMouseMove, onChange])\r\n    const onMouseDown = useCallback((event: any) => {\r\n        let x = event.offsetX, y = event.offsetY;\r\n        if (action.lastClickTime) {\r\n            action.singleClick = (new Date()).valueOf() - (action.lastClickTime).valueOf() < 250 ? false : true\r\n        }\r\n        action.lastClickTime = new Date()\r\n        action.mouseDownXY.x = x;\r\n        action.mouseDownXY.y = y;\r\n        let activeMoveRectPoint = action.findRectInCanvas(x, y)\r\n        if (activeMoveRectPoint) {\r\n            action.activeMoveRect = activeMoveRectPoint?.key\r\n            action.activeDeleRect = activeMoveRectPoint?.key\r\n            const rectIndex = action.getRectIndex(activeMoveRectPoint?.key)\r\n            let current = action.nodes[rectIndex]\r\n            action.nodes[rectIndex].active = true\r\n            action.nodes.splice(rectIndex, 1)\r\n            action.nodes.push(current)\r\n            onChange && onChange(action.nodes)\r\n            action.initCanvas()\r\n        }\r\n        onDragRect();\r\n    }, [onDragRect, onChange])\r\n    useEffect(() => {\r\n        console.log(wrapper.current)\r\n        if (wrapper.current) {\r\n            action.canvas = canvas.current\r\n            canvas.current.width = wrapper.current.offsetWidth;\r\n            canvas.current.height = wrapper.current.offsetHeight\r\n            action.canvas.width = wrapper.current.offsetWidth;\r\n            action.canvas.height = wrapper.current.offsetHeight\r\n            action.ctx = canvas.current.getContext(\"2d\");\r\n            canvas.current.onmousedown = onMouseDown\r\n            action.initCanvas()\r\n        }\r\n    }, [onMouseDown])\r\n    return <div ref={wrapper} style={{ width: \"100%\", height: \"100%\" }}>\r\n        <canvas ref={canvas} id=\"canvas\"></canvas>\r\n    </div>\r\n}\r\nexport default MultipleFlow\r\n","/*\n * @Author: your name\n * @Date: 2020-08-07 14:04:20\n * @LastEditTime: 2020-08-07 15:24:25\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\react-flow-component\\src\\index.js\n */\nimport React, { useState, useRef } from 'react';\nimport { render } from \"react-dom\";\nimport { MultipleFlow, SingleFlow, FlowModal } from \"./lib\";\nimport './index.css'\nconst treeData = [\n    {\n        title: '检测集中性分析',\n        key: '0-0',\n        children: [\n            { title: '分析子项A01', key: '0-0-1', type: 1 },\n            { title: '分析子项A02', key: '0-0-2', type: 1 },\n            { title: '分析子项A03', key: '0-0-3', type: 2 },\n            { title: '分析子项A04', key: '0-0-4', type: 2 },\n        ],\n    },\n    {\n        title: 'Map分析',\n        key: '0-1',\n        children: [\n            { title: '分析子项B01', key: '0-1-1', type: 1 },\n            { title: '分析子项B02', key: '0-1-2', type: 1 },\n            { title: '分析子项B03', key: '0-1-3', type: 2 },\n            { title: '分析子项B04', key: '0-1-4', type: 2 },\n        ],\n    },\n    {\n        title: '工艺路径分析',\n        key: '0-2',\n        children: [\n            { title: '分析子项C01', key: '0-2-1', type: 1 },\n            { title: '分析子项C02', key: '0-2-2', type: 1 },\n            { title: '分析子项C03', key: '0-2-3', type: 2 },\n            { title: '分析子项C04', key: '0-2-4', type: 2 },\n        ],\n    },\n    {\n        title: '工艺履历分析',\n        key: '0-3',\n        children: [\n            { title: '分析子项D01', key: '0-3-1', type: 1 },\n            { title: '分析子项D02', key: '0-3-2', type: 1 },\n            { title: '分析子项D03', key: '0-3-3', type: 2 },\n            { title: '分析子项D04', key: '0-3-4', type: 2 },\n        ],\n    },\n    {\n        title: '过程品质分析',\n        key: '0-4',\n        children: [\n            { title: '分析子项E01', key: '0-4-1', type: 1 },\n            { title: '分析子项E02', key: '0-4-2', type: 1 },\n            { title: '分析子项E03', key: '0-4-3', type: 2 },\n            { title: '分析子项E04', key: '0-4-4', type: 2 },\n        ],\n    },\n    {\n        title: '工艺参数分析',\n        key: '0-5',\n        children: [\n            { title: '分析子项F01', key: '0-5-1', type: 1 },\n            { title: '分析子项F02', key: '0-5-2', type: 1 },\n            { title: '分析子项F03', key: '0-5-3', type: 2 },\n            { title: '分析子项F04', key: '0-5-4', type: 2 },\n        ],\n    },\n    {\n        title: '工艺原料分析',\n        key: '0-6',\n        children: [\n            { title: '分析子项G01', key: '0-6-1', type: 1 },\n            { title: '分析子项G02', key: '0-6-2', type: 1 },\n            { title: '分析子项G03', key: '0-6-3', type: 2 },\n            { title: '分析子项G04', key: '0-6-4', type: 2 },\n        ],\n    },\n];\nconst App = (() => {\n    const [selectedKeys, setSelectedKeys] = useState([]);\n    const [zIndex, setZindex] = useState(0)\n    const [currentKey, setCurrentKey] = useState(null)\n    const [showKeys, setShowKeys] = useState([])\n    const [editKey, setEditKey] = useState(null)\n    const dragBox = useRef(null)\n    window.ondragstart = function (event) {\n        console.log(event)\n        setZindex(100)\n        var evt = event || window.event;\n        setCurrentKey({\n            x: evt.clientX - evt.target.offsetLeft,\n            y: evt.clientY - evt.target.offsetTop,\n            title: evt.target.dataset.title,\n            key: evt.target.dataset.key\n        })\n    }\n    window.ondragover = function (event) {\n        event.preventDefault()\n    }\n    window.ondragenter = function (event) {\n        event.preventDefault()\n    }\n    window.ondrop = function (event) {\n        var evt = event || window.event;\n        var offset_x = currentKey.x, offset_y = currentKey.y;//偏移\n        evt.preventDefault();\n        setZindex(0)\n        if (!JSON.stringify(selectedKeys).includes('\"key\":\"' + currentKey.key + '\"')) {\n            setSelectedKeys([...selectedKeys, {\n                title: currentKey.title,\n                key: currentKey.key,\n                x: evt.clientX - offset_x + 50 - 200,\n                y: evt.clientY - offset_y + 15,\n                active: false,\n                to: []\n            }]);\n        }\n    }\n    return <div style={{ width: \"100%\", height: \"100%\", display: \"flex\" }}>\n        <div style={{ width: \"100%\", height: \"100%\", position: \"absolute\", left: 0, top: 0, zIndex: zIndex }}>\n            {\n                treeData.map((item, index) => {\n                    return <div className={`list_sub ${showKeys.includes(index) ? 'list_sub_active' : ''}`} ref={dragBox} key={item.key} >\n                        <div draggable className=\"list_title\" onClick={() => {\n                            if (showKeys.indexOf(index) !== -1) {\n                                showKeys.splice(showKeys.indexOf(index), 1)\n                                setShowKeys(showKeys)\n                            } else {\n                                setShowKeys([...showKeys, index])\n                            }\n                        }} key={item.key} data-title={item.title} data-key={item.key}>{item.title}</div>\n                        {item.children.map((itx) => {\n                            return <div draggable className=\"list_child\" key={itx.key} data-title={itx.title} data-key={itx.key}>\n                                {itx.title}\n                            </div>\n                        })}\n                    </div>\n                })\n            }\n        </div>\n        <div style={{ marginLeft: \"200px\", width: \"calc(100% - 200px)\", height: \"100%\", position: \"relative\", zIndex: \"10\", background: \"#ddd\" }}>\n            <MultipleFlow selectedKeys={selectedKeys}></MultipleFlow>\n        </div>\n        {/* <div style={{ marginLeft: \"200px\", width: \"calc(100% - 200px)\", height: \"100%\", position: \"relative\", zIndex: \"10\", background: \"#ddd\" }}>\n            <SingleFlow selectedKeys={selectedKeys}></SingleFlow>\n        </div> */}\n    </div>\n})\n\nrender(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}